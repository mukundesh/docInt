[tool.poetry]
name = "docint"
version = "0.1.0"
description = "Extracting information from DOCuments INTelligently."
authors = ["mukundesh <mukundesh@outlook.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "!=3.7.6,!=3.8.1,>3.7.1,<4.0"
pydantic = "^1.10.2"
polyleven = "^0.8"
pyyaml = "^6.0"
more-itertools = "^8.14.0"
pillow = "^9.2.0"
python-dateutil = "^2.8.2"
pypdfium2 = "^3.3.0"


[tool.poetry.group.test.dependencies]
pytest = "^7.1.3"
pytest-cov = "^4.0.0"



[tool.poetry.group.dev.dependencies]
black = "^22.10.0"
flake8 = "3.9.2"


[tool.poetry.group.docs.dependencies]
mkdocs-material = "^8.5.6"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
# skip-string-normalization = true
target-version = ['py36', 'py37', 'py38', 'py39', 'py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[tool.coverage.run]
# uncomment the following to omit files during running
#omit =
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "def main"
    ]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist = py37, py38, py39, py310, format, lint, build

[gh-actions]
python =
    3.10: py310
    3.9: py39
    3.8: py38, format, lint, build
    3.7: py37

[testenv]
allowlist_externals = pytest
extras =
    test
passenv = *
setenv =
    PYTHONPATH = {toxinidir}
    PYTHONWARNINGS = ignore
commands =
    pytest --cov=docint --cov-branch --cov-report=xml --cov-report=term-missing tests

[testenv:format]
allowlist_externals =
    isort
    black
extras =
    test
commands =
    isort docint tests
    black docint tests

[testenv:lint]
allowlist_externals =
    flake8
extras =
    test
commands =
    flake8 docint tests


[testenv:build]
allowlist_externals =
    poetry
    mkdocs
    twine
extras =
    doc
    dev
commands =
    poetry build
    mkdocs build
    twine check dist/*
"""
